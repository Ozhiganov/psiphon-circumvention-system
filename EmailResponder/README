0. Used Ubuntu 11.10 Server 64-bit. AMI IDs can be found via here:
https://help.ubuntu.com/community/EC2StartersGuide
Security Group must allow port 25 (SMTP) through (and SSH, so configuration
is possible.)

1. OS updates
> sudo apt-get update
> sudo apt-get upgrade

2. Install postfix
> sudo apt-get install postfix
During installation:
- Choose the "Internet Site option".
- Set the system mail name to the public DNS name of the instance. When we're 
  ready to go live, this will change to the real domain name.

3. Create a limited-privilege user that will do most of the mail processing.
Ref: http://www.cyberciti.biz/tips/howto-linux-shell-restricting-access.html
Add "/usr/sbin/nologin" (sans quotes) to /etc/shells.
> sudo useradd -s /usr/sbin/nologin email_responder
- Also create a home directory for the user:
> sudo mkdir /home/mail_responder
> sudo chown mail_responder:mail_responder /home/mail_responder

4. Change aliases.
- Edit /etc/aliases to map postmaster to whatever the "normal" user is 
(probably "ubuntu").
- Reload aliases map: > sudo newaliases

5. Add .forward file for "normal" (probably "ubuntu") user. In the file, put 
the email address that error mail should go to.

6. Edit /etc/postfix/main.cf
- Change myhostname to be the public DNS name of the instance.
- Add these two lines to the end. The cause all email that doesn't correspond 
to a real address to be forwarded to the mail_responder account (which will 
then do the response processing).
local_recipient_maps =
luser_relay = mail_responder+$local

(Note: If too much error email is being sent to the postmaster, we can also 
add this line: 
notify_classes = 
)

7. Restart postfix:
> sudo /etc/init.d/postfix restart

8. Copy mail_process.py, sendmail.py and forward to /home/mail_responder. 
Rename forward to .forward. Make sure the permissions are correct:
> sudo chown mail_responder:mail_responder mail_process.py sendmail.py .forward

9. Create directory where the responder configuration file will go.
> sudo mkdir /mail_responder_config
TODO: Figure out what the write permissions should be on this directory.

999. The mail responder is now ready to go. A configuration file must be 
present at /mail_responder_config/conf.json in order for anything to actually 
happen.




*** conf spec
*** logging
*** SES
